<?xml version="1.0" encoding="UTF-8"?>
<mod>
    <action name="mole-map-generator">
        <object name="newmap"/>
        
        <code>
global putFloor, putWall, putStairs, floored, randomDirect
global mymap, mapId
mymap = newmap
mapId = mymap.attr('id')
def putFloor(x, y):
    mymap.createEntity({'class':'floor'}, x, y, 'ground')

def putWall(x, y):
    mymap.createEntity({'class':'wall'}, x, y, 'ground')

def putStairs(x, y):
    mymap.createEntity({'class':'stairs', 'destination':mapId+1}, x, y, 'feature')
    debug('created stairs at ({0}, {1})'.format(x, y))

def floored(x, y):
    try:
        ground = mymap.getContent(x, y, 'ground')
        if not ground: return False
        return ground.attr('class') == 'floor'
    except IndexError:
        return False
    except TiledMapSizeError:
        return False

def randomDirect():
    useX = bool(int(random()*2))
    sign = int((int(random()*2)-0.5)*2)
    if useX:
        return (sign, 0)
    else:
        return (0, sign)

def makeFloor():
    global x, y, direct, totalFloor
    
    square = width*height
    floorPortion = random()*0.2+0.3
    totalFloor = int(floorPortion*square)
    leftToFloor = totalFloor
    
    x = int(random()*width)
    y = int(random()*height)
    direct = randomDirect()
    
    def checkBounds():
        global x, y, direct, totalFloor
        if x &gt;= width-1:
            direct = randomDirect()
            x = width-2
        elif x &lt;= 0:
            direct = randomDirect()
            x = 1
        if y &gt;= height-1:
            direct = randomDirect()
            y = height-2
        elif y &lt;= 0:
            direct = randomDirect()
            y = 1
    
    def makeStep():
        global x, y, direct, totalFloor
        if random() > 0.8:
            direct = randomDirect()
        x += direct[0]
        y += direct[1]
        checkBounds()
    
    while leftToFloor:
        makeStep()
        if not floored(x, y):
            putFloor(x, y)
            leftToFloor -= 1

def fillWallsAndStairs():
    placedStairs = False
    stairsProbability = 1.0/totalFloor
    for y in range(height):
        for x in range(width):
            if floored(x, y):
                latestStairsPosition = (x, y)
                if not placedStairs and random() &lt; stairsProbability:
                    placedStairs = True
                    putStairs(x, y)
            else:
                ns = (
                    (floored(dx+x, dy+y) for dx in range(-1, 2)) \
                        for dy in range(-1, 2)
                )
                ns = tuple((v for l in ns for v in l))
                debug(ns)
                if reduce(lambda v1, v2: v1 or v2, ns):
                    putWall(x, y)
    if not placedStairs:
        putStairs(*latestStairsPosition)
        placedStairs = True

# size
MIN_SIZE = 16
MAX_SIZE = 32
global width, height
width = int(random()*(MAX_SIZE-MIN_SIZE))+MIN_SIZE
height = int(random()*(MAX_SIZE-MIN_SIZE))+MIN_SIZE
mymap.resize(width, height)

global x, y, direct, totalFloor
totalFloor = 0
makeFloor()
fillWallsAndStairs()

mymap.setExist(True)
_return = True
        </code>
    </action>
</mod>
